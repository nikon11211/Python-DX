import random

word_list = ['—Ñ—É–Ω–∫—Ü–∏—è','–ø—Ä–æ–∏–∑–≤–æ–¥–Ω–∞—è','–¥–∏—Å–∫—Ä–∏–º–∏–Ω–∞–Ω—Ç','–∞–∫—Å–∏–æ–º–∞','–∏–Ω—Ç–µ–≥—Ä–∞–ª','–≥–∏–ø–µ—Ä–±–æ–ª–∞','–≤–µ–∫—Ç–æ—Ä','–∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞','–ª–µ–º–º–∞','–ø–∞—Ä–∞–±–æ–ª–∞','—Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª','–∞–±—Å—Ü–∏—Å—Å–∞','–∞–ø–ø–ª–∏–∫–∞—Ç–∞','–∫–∞—Ç–µ—Ç','–≥–∏–ø–æ—Ç–µ–Ω—É–∑–∞','—É–≥–æ–ª','—Ç–∞–Ω–≥–µ–Ω—Å','–∫–æ—Å–∏–Ω—É—Å','—Å–∏–Ω—É—Å']
mean_list = ['¬´–ó–∞–∫–æ–Ω¬ª, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –æ–¥–Ω–æ–≥–æ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ (–Ω–∞–∑—ã–≤–∞–µ–º–æ–º—É –æ–±–ª–∞—Å—Ç—å—é –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è) —Å—Ç–∞–≤–∏—Ç—Å—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥—Ä—É–≥–æ–≥–æ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ (–Ω–∞–∑—ã–≤–∞–µ–º–æ–≥–æ –æ–±–ª–∞—Å—Ç—å—é –∑–Ω–∞—á–µ–Ω–∏–π).','–ü–æ–Ω—è—Ç–∏–µ –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–≥–æ –∏—Å—á–∏—Å–ª–µ–Ω–∏—è, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É—é—â–µ–µ —Å–∫–æ—Ä–æ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –¥–∞–Ω–Ω–æ–π —Ç–æ—á–∫–µ.','–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–Ω—è—Ç–∏–µ, –æ–±–æ–∑–Ω–∞—á–∞–µ–º–æ–µ –±—É–∫–≤–∞–º–∏ D –∏–ª–∏ Œî.','–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ, –ø—Ä–∏–Ω–∏–º–∞–µ–º–æ–µ –∏—Å—Ç–∏–Ω–Ω—ã–º –±–µ–∑ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤, –∏ –∫–æ—Ç–æ—Ä–æ–µ –≤ –ø–æ—Å–ª–µ–¥—É—é—â–µ–º —Å–ª—É–∂–∏—Ç ¬´—Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–æ–º¬ª –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤ –≤ —Ä–∞–º–∫–∞—Ö –∫–∞–∫–æ–π-–ª–∏–±–æ —Ç–µ–æ—Ä–∏–∏, –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã –∏ —Ç.–¥.','–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–æ–≥ —Å—É–º–º—ã –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.','–ì–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–µ –º–µ—Å—Ç–æ —Ç–æ—á–µ–∫ M –µ–≤–∫–ª–∏–¥–æ–≤–æ–π –ø–ª–æ—Å–∫–æ—Å—Ç–∏, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –∞–±—Å–æ–ª—é—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ä–∞–∑–Ω–æ—Å—Ç–∏ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–π –æ—Ç M –¥–æ –¥–≤—É—Ö –≤—ã–¥–µ–ª–µ–Ω–Ω—ã—Ö —Ç–æ—á–µ–∫ F_1 –∏ F_2 –ø–æ—Å—Ç–æ—è–Ω–Ω–æ.','–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –æ—Ç—Ä–µ–∑–æ–∫ ‚Äî —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω–∞—è –ø–∞—Ä–∞ —Ç–æ—á–µ–∫','–í–µ–ª–∏—á–∏–Ω–∞, –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–π –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è.','–î–æ–∫–∞–∑–∞–Ω–Ω–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ, –ø–æ–ª–µ–∑–Ω–æ–µ –Ω–µ —Å–∞–º–æ –ø–æ —Å–µ–±–µ, –∞ –¥–ª—è –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –¥—Ä—É–≥–∏—Ö —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π','–ö—Ä–∏–≤–∞—è –≤—Ç–æ—Ä–æ–≥–æ –ø–æ—Ä—è–¥–∫–∞, –≥—Ä–∞—Ñ–∏–∫ —É—Ä–∞–≤–Ω–µ–Ω–∏—è (–∫–≤–∞–¥—Ä–∞—Ç–∏—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏) y = ax^2 + bx + c','–û–±–æ–∑–Ω–∞—á–∞–µ—Ç—Å—è n!','–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ —Ç–æ—á–∫–∏ –Ω–∞ –æ—Å–∏ –ûX','–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ —Ç–æ—á–∫–∏ –Ω–∞ –æ—Å–∏ –ûZ','–û–¥–Ω–∞ –∏–∑ –¥–≤—É—Ö —Å—Ç–æ—Ä–æ–Ω –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–≥–æ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞','–°–∞–º–∞—è –¥–ª–∏–Ω–Ω–∞—è —Å—Ç–æ—Ä–æ–Ω–∞ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–≥–æ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞.','–ì–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è —Ñ–∏–≥—É—Ä–∞, –æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω–∞—è –¥–≤—É–º—è –ª—É—á–∞–º–∏, –≤—ã—Ö–æ–¥—è—â–∏–º–∏ –∏–∑ –æ–¥–Ω–æ–π —Ç–æ—á–∫–∏.','–û—Ç–Ω–æ—à–µ–Ω–∏–µ –ø—Ä–æ—Ç–∏–≤–æ–ª–µ–∂–∞—â–µ–≥–æ –∫–∞—Ç–µ—Ç–∞ –∫ –ø—Ä–∏–ª–µ–∂–∞—â–µ–º—É.','–û—Ç–Ω–æ—à–µ–Ω–∏—é –ø—Ä–∏–ª–µ–∂–∞—â–µ–≥–æ –∫–∞—Ç–µ—Ç–∞ –∫ –µ–≥–æ –≥–∏–ø–æ—Ç–µ–Ω—É–∑–µ.', '–û—Ç–Ω–æ—à–µ–Ω–∏–µ –ø—Ä–æ—Ç–∏–≤–æ–ª–µ–∂–∞—â–µ–≥–æ –∫–∞—Ç–µ—Ç–∞ –∫ –≥–∏–ø–æ—Ç–µ–Ω—É–∑–µ.']

# —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–ª–æ–≤–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –≤ –≤–µ—Ä—Ö–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ
def get_word():
    r = random.choice(word_list)
    ind = word_list.index(r)
    mean = mean_list[ind]
    return r.upper(), mean

# —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
def display_hangman(tries):
    stages = [  # —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: –≥–æ–ª–æ–≤–∞, —Ç–æ—Ä—Å, –æ–±–µ —Ä—É–∫–∏, –æ–±–µ –Ω–æ–≥–∏
                '''
                   --------
                   |      |
                   |     üíÄ
                   |     /|\\
                   |      |
                   |     / \\
                   -
                ''',
                # –≥–æ–ª–æ–≤–∞, —Ç–æ—Ä—Å, –æ–±–µ —Ä—É–∫–∏, –æ–¥–Ω–∞ –Ω–æ–≥–∞
                '''
                   --------
                   |      |
                   |     üò≠
                   |     /|\\
                   |      |
                   |     / 
                   -
                ''',
                # –≥–æ–ª–æ–≤–∞, —Ç–æ—Ä—Å, –æ–±–µ —Ä—É–∫–∏
                '''
                   --------
                   |      |
                   |     üò®
                   |     /|\\
                   |      |
                   |      
                   -
                ''',
                # –≥–æ–ª–æ–≤–∞, —Ç–æ—Ä—Å –∏ –æ–¥–Ω–∞ —Ä—É–∫–∞
                '''
                   --------
                   |      |
                   |     üòñ
                   |     /|
                   |      |
                   |     
                   -
                ''',
                # –≥–æ–ª–æ–≤–∞ –∏ —Ç–æ—Ä—Å
                '''
                   --------
                   |      |
                   |     üò©
                   |      |
                   |      |
                   |     
                   -
                ''',
                # –≥–æ–ª–æ–≤–∞
                '''
                   --------
                   |      |
                   |     ü•∫
                   |    
                   |      
                   |     
                   -
                ''',
                # –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                '''
                   --------
                   |      |
                   |      
                   |    
                   |      
                   |     
                   -
                '''
    ]
    return stages[tries]

def play(word, mean):
    word_completion = '_' * len(word)  # —Å—Ç—Ä–æ–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Å–∏–º–≤–æ–ª—ã _ –Ω–∞ –∫–∞–∂–¥—É—é –±—É–∫–≤—É –∑–∞–¥—É–º–∞–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞
    guessed = False                    # —Å–∏–≥–Ω–∞–ª—å–Ω–∞—è –º–µ—Ç–∫–∞
    guessed_letters = []               # —Å–ø–∏—Å–æ–∫ —É–∂–µ –Ω–∞–∑–≤–∞–Ω–Ω—ã—Ö –±—É–∫–≤
    guessed_words = []                 # —Å–ø–∏—Å–æ–∫ —É–∂–µ –Ω–∞–∑–≤–∞–Ω–Ω—ã—Ö —Å–ª–æ–≤
    tries = 6                          # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫

    print('–î–∞–≤–∞–π—Ç–µ –∏–≥—Ä–∞—Ç—å –≤ —É–≥–∞–¥–∞–π–∫—É —Å–ª–æ–≤!')
    print(f'–í–∏—Å–µ–ª–∏—Ü–∞: {display_hangman(tries)}')
    print(f'–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ: {word_completion}')
    print(f'–ü–æ–¥—Å–∫–∞–∑–∫–∞:\n{mean}')

    while tries >= 0:
        if tries == 0:
            print('–£–≤—ã, –ø–æ–ø—ã—Ç–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å, –í—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ')
            print(f'–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ: {word}')
            print(f'–í–∏—Å–µ–ª–∏—Ü–∞: {display_hangman(tries)}')
            break
        word_input = input('–í–≤–µ–¥–∏—Ç–µ –±—É–∫–≤—É –∏–ª–∏ —Å–ª–æ–≤–æ: ').upper()
        if '–ê' <= word_input <= '–Ø' or word_input.isalpha():

            if word_input in guessed_letters or word_input in guessed_words:
                print('–í—ã —ç—Ç–æ —É–∂–µ –≤–≤–æ–¥–∏–ª–∏')
                continue
            elif len(word_input) == 1 and word_input in word:
                for i in range(len(word)):
                    if word[i] == word_input:
                        word_completion = word_completion[:i] + word_input + word_completion[i+1:]
                guessed_letters.append(word_input)
                print(f'–í—ã —É–≥–∞–¥–∞–ª–∏ –±—É–∫–≤—É\n{word_completion}')
            elif len(word_input) == 1 and word_input not in word:
                tries -= 1
                guessed_letters.append(word_input)
                print(f'–í–´ –Ω–µ —É–≥–∞–¥–∞–ª–∏ –±—É–∫–≤—É, –æ—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫ {tries}')
                print(word_completion)
                print(f'–í–∏—Å–µ–ª–∏—Ü–∞: {display_hangman(tries)}')
            elif len(word_input) > 1:
                if word_input == word:
                    print('–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –í—ã —É–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ! –í—ã –ø–æ–±–µ–¥–∏–ª–∏!')
                    print(f'–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ: {word}')
                    break
                else:
                    tries -= 1
                    guessed_words.append(word_input)
                    print(f'–í—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ, –æ—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫ {tries}')
                    print(word_completion)
                    print(f'–í–∏—Å–µ–ª–∏—Ü–∞: {display_hangman(tries)}')

        else:
            print('–í—ã –≤–≤–µ–ª–∏ –Ω–µ –±—É–∫–≤—É –∏ –Ω–µ —Å–ª–æ–≤–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')

while True:
    word, mean = get_word()
    play(word, mean)
    repeat = input('–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑? ').lower()
    if repeat == '–¥–∞':
        print('\n')
    elif repeat == '–Ω–µ—Ç':
        print('–í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å —Å–Ω–æ–≤–∞, –¥–æ —Å–≤–∏–¥–∞–Ω–∏—è!')
        break
    else:
        break